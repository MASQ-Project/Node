name: ci-matrix

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - master

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target:
          - { name: linux, os: ubuntu-latest }
          - { name: macos, os: macOS-latest }
          - { name: windows, os: windows-latest }

    name: Build node on ${{ matrix.target.os }}
    runs-on: ${{ matrix.target.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Stable with rustfmt and clippy
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: 1.63.0
          components: rustfmt, clippy
          override: true
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/cache/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.OS }}-cargo-
      - name: Build ${{ matrix.target.os }}
        run: |
          ./ci/all.sh
          ./ci/multinode_integration_test.sh
          ./ci/collect_results.sh
        shell: bash
      - name: Publish ${{ matrix.target.os }}
        uses: actions/upload-artifact@v3
        with:
          name: Node-${{ matrix.target.name }}
          path: results
